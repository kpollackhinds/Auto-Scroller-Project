#include <PWMServo.h>
#include <HCSR04.h>
#include <SoftwareSerial.h>
#include <PCM.h>
const int servoPin=9;
const int trigPin=3;
const int echoPin=4;
const byte rxPin = 5;
const byte txPin = 6;
PWMServo scroller;
SoftwareSerial Serial1(rxPin, txPin);
HCSR04 hc(trigPin, new int[1]{echoPin},1);
bool autoScroll =false;
long lastScroll=0;
int distance;
String message, sound_state, scroll_state, scroll_speed;
int direction=1;
int delayTime;
bool prevOn=true;
bool audio=true;
const unsigned char autoSound[] PROGMEM = {
  129, 128, 128, 128, 128, 128, 128, 128, 128, 128, 125, 128, 128, 127, 128, 128, 128, 128, 128, 129, 128, 128, 128, 128, 127, 126, 128, 127, 128, 128, 127, 130, 130, 128, 128, 128, 128, 127, 129, 128, 127, 128, 129, 127, 128, 132, 123, 125, 130, 130, 130, 124, 127, 128, 125, 131, 130, 125, 127, 130, 125, 122, 124, 122, 130, 129, 129, 131, 120, 128, 130, 128, 128, 123, 132, 130, 128, 127, 123, 133, 130, 125, 128, 129, 128, 127, 130, 125, 124, 124, 122, 129, 128, 130, 130, 129, 131, 121, 127, 136, 131, 128, 126, 126, 132, 138, 110, 81, 121, 188, 125, 35, 175, 225, 80, 107, 162, 148, 125, 68, 133, 155, 78, 98, 121, 129, 157, 112, 87, 184, 180, 65, 106, 198, 158, 45, 104, 204, 93, 105, 125, 113, 194, 77, 150, 181, 30, 228, 154, 35, 205, 146, 150, 105, 61, 190, 136, 103, 120, 145, 125, 65, 152, 127, 149, 157, 25, 148, 197, 96, 125, 132, 106, 166, 160, 44, 175, 182, 42, 181, 83, 112, 233, 43, 173, 129, 66, 255, 63, 126, 190, 42, 213, 117, 67, 195, 61, 142, 189, 46, 160, 185, 90, 171, 110, 37, 175, 151, 128, 158, 57, 128, 183, 130, 171, 124, 98, 130, 132, 143, 87, 98, 133, 109, 144, 132, 117, 161, 163, 153, 116, 101, 126, 131, 147, 110, 89, 121, 124, 161, 150, 106, 120, 117, 147, 158, 126, 117, 102, 138, 153, 133, 133, 95, 115, 140, 113, 117, 109, 118, 139, 146, 142, 128, 142, 150, 153, 120, 87, 116, 110, 129, 145, 96, 104, 128, 160, 175, 122, 112, 118, 117, 142, 135, 112, 110, 112, 136, 158, 125, 118, 130, 110, 130, 138, 116, 131, 135, 144, 143, 120, 131, 140, 135, 128, 105, 95, 107, 123, 143, 145, 114, 115, 145, 160, 160, 122, 91, 121, 140, 130, 116, 106, 122, 130, 133, 151, 127, 107, 128, 141, 153, 114, 107, 160, 140, 129, 121, 113, 140, 115, 125, 110, 82, 142, 122, 115, 160, 137, 129, 128, 156, 183, 128, 86, 97, 122, 134, 131, 111, 100, 112, 131, 171, 150, 129, 146, 94, 119, 175, 133, 100, 94, 142, 150, 91, 100, 133, 138, 138, 135, 104, 107, 153, 158, 168, 106, 100, 177, 103, 112, 145, 92, 109, 93, 171, 178, 60, 135, 154, 128, 143, 108, 145, 127, 94, 122, 130, 148, 133, 137, 130, 118, 144, 128, 107, 84, 124, 160, 100, 121, 163, 140, 142, 152, 
};
const unsigned char stopSound[] PROGMEM = {
  129, 126, 128, 129, 126, 129, 126, 129, 128, 125, 128, 126, 129, 126, 128, 129, 124, 129, 127, 129, 128, 127, 130, 126, 129, 128, 128, 128, 123, 131, 127, 127, 129, 126, 128, 123, 128, 130, 126, 128, 126, 131, 128, 126, 129, 129, 129, 128, 128, 125, 128, 127, 125, 126, 126, 131, 126, 126, 132, 126, 132, 133, 128, 128, 129, 128, 127, 131, 126, 124, 128, 128, 126, 123, 126, 127, 124, 125, 127, 126, 129, 131, 127, 132, 127, 123, 131, 128, 128, 129, 128, 129, 132, 132, 129, 136, 126, 128, 132, 127, 128, 122, 141, 83, 57, 190, 170, 67, 110, 185, 139, 70, 147, 171, 130, 116, 96, 161, 178, 104, 56, 134, 211, 81, 58, 164, 186, 111, 54, 188, 166, 73, 121, 128, 193, 109, 56, 198, 124, 67, 123, 151, 166, 87, 111, 182, 116, 90, 131, 145, 155, 100, 115, 208, 92, 75, 184, 116, 107, 113, 130, 161, 102, 122, 147, 144, 128, 111, 104, 141, 180, 42, 126, 193, 35, 181, 160, 60, 163, 141, 158, 104, 95, 167, 142, 120, 86, 190, 123, 62, 193, 64, 136, 190, 45, 133, 112, 141, 163, 74, 188, 163, 89, 141, 124, 125, 142, 108, 90, 140, 129, 100, 162, 163, 127, 113, 101, 124, 147, 121, 91, 145, 171, 97, 95, 179, 150, 99, 153, 140, 122, 104, 81, 169, 128, 90, 140, 100, 156, 146, 118, 166, 100, 155, 143, 69, 157, 102, 120, 137, 61, 175, 137, 120, 172, 94, 177, 126, 94, 190, 94, 128, 110, 99, 185, 59, 117, 151, 89, 174, 117, 123, 129, 105, 188, 140, 104, 118, 150, 163, 97, 120, 155, 139, 79, 100, 148, 74, 128, 162, 144, 136, 62, 169, 179, 108, 148, 94, 161, 164, 65, 109, 118, 156, 115, 85, 171, 129, 116, 116, 158, 178, 57, 117, 157, 152, 142, 38, 167, 180, 99, 126, 67, 200, 125, 25, 227, 120, 106, 115, 88, 255, 62, 69, 203, 102, 177, 60, 126, 233, 28, 140, 158, 123, 144, 24, 166, 175, 104, 161, 96, 165, 157, 72, 125, 136, 139, 68, 83, 204, 163, 104, 95, 121, 150, 131, 129, 132, 155, 122, 88, 153, 147, 120, 109, 116, 172, 129, 121, 141, 112, 148, 86, 56, 121, 125, 175, 156, 133, 144, 92, 145, 164, 130, 132, 119, 118, 108, 139, 126, 99, 113, 108, 157, 135, 153, 144, 59, 162, 148, 139, 142, 65, 199, 108, 67, 168, 65, 172, 133, 97, 204, 52, 123, 153, 114, 212, 83, 113, 164, 87, 181, 132, 69, 157, 144, 88, 86, 97, 143, 145, 115, 172, 150, 130, 152, 85, 144, 176, 104, 99, 116, 139, 105, 142, 172, 88, 87, 112, 137, 132, 152, 151, 68, 155, 155, 81, 131, 122, 167, 152, 112, 149, 97, 125, 147, 102, 113, 99, 141, 186, 115, 100, 140, 128, 128, 94, 128, 187, 88, 137, 156, 60, 164, 145, 90, 124, 112, 137, 115, 147, 156, 97, 112, 138, 169, 134, 120, 78, 100, 177, 51, 129, 166, 94, 189, 68, 145, 202, 67, 183, 109, 110, 160, 73, 168, 130, 92, 108, 122, 157, 84, 155, 123, 78, 169, 121, 166, 129, 81, 142, 112, 195, 128, 56, 182, 120, 83, 79, 93, 226, 130, 84, 190, 93, 96, 182, 158, 156, 59, 68, 150, 94, 164, 112, 51, 214, 131, 60, 152, 137, 134, 128, 138, 132, 100, 138, 168, 142, 72, 108, 139, 108, 170, 135, 90, 99, 121, 169, 97, 164, 203, 63, 91, 94, 148, 167, 70, 191, 148, 69, 134, 84, 169, 107, 43, 212, 112, 115, 191, 77, 163, 129, 32, 149, 157, 157, 156, 92, 113, 96, 94, 163, 158, 115, 80, 105, 169, 148, 123, 149, 137, 129, 152, 112, 82, 143, 101, 76, 193, 140, 102, 146, 82, 136, 126, 91, 187, 116, 112, 129, 100, 190, 125, 131, 168, 56, 105, 123, 106, 139, 130, 139, 99, 148, 177, 114, 139, 112, 104, 127, 136, 164, 107, 98, 107, 117, 154, 116, 132, 132, 125, 146, 91, 137, 161, 123, 148, 113, 117, 124, 100, 156, 139, 102, 120, 129, 164, 142, 94, 112, 126, 135, 139, 126, 130, 149, 130, 103, 124, 
};
void Stop(){
  scroller.write(90);
}

void Scroll(int dir){
  if(dir ==-1){
    scroller.write(0);
  }else if(dir==1){
    scroller.write(180);
  }
  //speed at 6V .17s per 60, 4.8V .2s per 60
  delay(170*6);
  Stop();
}
void setup() {
  Serial1.begin(9600);
  scroller.attach(servoPin);
}

void loop() {
  distance = hc.dist(0);
  scroll_state ="";
  scroll_speed="";
  sound_state="";
  message="";
  if(distance>50 && distance<200){
    //get message way TBD can all be changed later
    while (Serial1.available() >= 0) {
      //data,scroll_state,scroll_speed,sound_state
      //data -> up down left right
      //scroll_state -> on off
      //scroll_speed -> int
      //sound_state -> on off
      message = Serial1.readStringUntil(",");
      Serial1.read();
      scroll_state=Serial1.readStringUntil(",");
      Serial1.read();
      scroll_speed=Serial1.readStringUntil(",");
      Serial1.read();
      sound_state = Serial1.readStringUntil('\n');
    }
    if(sound_state.equals("on")){
      audio=true;
    }else if(sound_state.equals("off")){
      audio=false;
    }
    if(autoScroll && scroll_state.equals("off")){
      Stop();
      if(audio){
        startPlayback(stopSound, sizeof(stopSound));
      }
      autoScroll=false;
    }else if(!autoScroll && scroll_state.equals("on")){
      if(audio){
        startPlayback(autoSound, sizeof(autoSound));
      }
      autoScroll =true;
    }else if(!autoScroll && message.equals("down")){
      Scroll(-1);
    }else if(!autoScroll && message.equals("up")){
      Scroll(1);
    }
    delayTime = abs(scroll_speed.toInt());
    direction=scroll_speed.toInt()/delayTime;
    if(autoScroll && millis()>lastScroll+delayTime*1000){
      if(!prevOn&&audio){
        startPlayback(autoSound, sizeof(autoSound));
      }
      Scroll(direction);
      Serial1.write("scroll\n")
      lastScroll=millis();
    }
    prevOn=true;
  }
  else{
    //send message to stop count
    if(prevOn){
      if(audio){
        startPlayback(stopSound, sizeof(stopSound));
      }
      prevOn=false;
    }
    //Serial1.write("away\n");
  }
}


